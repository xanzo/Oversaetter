EXERCISE 1

				  (1,1)		  (6,6)
					*			*
					|			|
                -------		  ------
				|	   |	 |		|
			  list	  list	 |		|
			  (2,2)	 (3,3)	 |		|
				|	   | ____|		|
			  int	 alpha		  beta
			 (4,4)	(5,5) 		  (7,7)
  
	Rule 4:		  (1,1)		  (1,6)
					*			*
					|			|
				 ------		  ------
				|	   |	 |		|
			  list	  list	 |		|
			  (2,2)	 (3,3)	 |		|
				|	   | ____|		|
			   int	 alpha		  beta
	Rule 3:	 (4,4)	(2,5) 		  (3,7)
			 
	list(int), list(list(int)), list(int), list(list(int))
			 
							*
							|
				 ------------------------
				|	   |		 |		 |
			  list	  list		list	list
				|	   | 		 |		 |
			  int	  list		int		list
					   |				 |
					  int				int
 
 
EXERCISE 2
2a)
vtable=[x->v, y->w]
ftable=[gcd->_GCD_]
gcd(x+y, y+1) * 2

t1 := v
t2 := w
t3 := t1 + t2
t4 := 1
t5 := t1 + t4
t6 := CALL _GCD_(t3, t5)
t7 := 2
t0 := t6 * t7
 
2b)
vtable=[a->v, b->w]
while (b != 0) && (a/b != 0) {
        if b < a then { a := a - b }
                 else { b := b - a }
    }

t1 := v
t2 := w
t3 := 0
LABEL l_1 
	IF t2 != t3 THEN l_2 ELSE l_f
LABEL l_2
	IF t1 / t2 != t3 THEN l_t ELSE l_f
LABEL l_t
	IF t2 < t1
	THEN t1 = t1 - t2
	ELSE t2 = t2 - t1
	GOTO LABEL t_1
LABEL l_f


2c)
1. rd := rs == rt
2. rd := ! r

1:
beq rs, rt, ltrue
addi rd, rd, 0
ltrue
	addi rd, rd, 1
	
2:
beq r, 0, ltrue
addi rd, rd, 0
ltrue
	addi rd, rd, 1
	

EXERCISE 3
gcd(a,b) {
1:  LABEL start
2:  IF a < b THEN next ELSE swap
3:  LABEL swap
4:  t := a
5:  a := b
6:  b := t
7:  LABEL next
8:  z := 0
9:  b := b mod a
10: IF b = z THEN end ELSE start
11: LABEL end
12: RETURN a
   }
   
3a)
 i	 |	succ[i]	 |	kill[i]	 |	gen[i]	  |
 ==========================================
 1	 |	  2		 |	 {ø}	 |	  {ø}	  |
 2	 |	 7,3	 | 	 {ø}	 |	  a,b	  |
 3	 |	  4		 |	 {ø}	 |	  {ø}	  |
 4	 |	  5		 |	  t		 |	   a	  |
 5	 |	  6		 |	  a		 |	   b	  |
 6	 |	  7 	 |	  b		 |	   t	  |
 7	 |	  8		 |	 {ø}	 |	  {ø}	  |
 8	 |	  9		 |	  z		 |	  {ø}	  |
 9	 |	  10	 |	  b		 |	  a,b	  |
 10	 |	 11,1	 |	 {ø}	 |	  b,z	  |
 11	 |	  12	 |	 {ø}	 |	  {ø}	  |
 12	 |	 {ø}	 |	 {ø}	 |	   a	  |
 
 3b)
 in[i] = gen[i] ∪ (out[i] \ kill[i]) (1)
out[i] = U in[j]
	  jcsucc[i]
 
 
  i	 |  out[i]	 |	in[i]	 |				  i	 |  out[i]	 |	in[i]	 |
 =============================				 =============================
 1	 |    a,b	 |	  a,b	 |				  1	 |    a,b	 |	  a,b	 |
 2	 |    a,b	 |	  a,b	 |				  2	 |    a,b	 |	  a,b	 |
 3	 |    a,b	 |	  a,b	 |				  3	 |    a,b	 |	  a,b	 |      
 4	 |    b,t	 |	  a,b	 |				  4	 |    b,t	 |	  a,b	 |      
 5	 |    a,t	 |	  b,t	 |				  5	 |    a,t	 |	  b,t	 |      
 6	 |    a,b	 |	  a,t	 |				  6	 |    a,b	 |	  a,t	 |      
 7	 |    a,b	 |	  a,b	 |				  7	 |    a,b	 |	  a,b	 |      
 8	 |   a,b,z	 |	  a,b	 |				  8	 |   a,b,z	 |	  a,b	 |      
 9	 |   a,b,z 	 |	 a,b,z	 |				  9	 |   a,b,z 	 |	 a,b,z	 |      
 10	 |    a 	 |	 a,b,z	 |				 10	 |    a 	 |	 a,b,z	 |      
 11	 |    a 	 |	  a 	 |				 11	 |    a 	 |	  a 	 |      
 12	 |   {ø}	 |	  a 	 |				 12	 |    a 	 |	  a 	 |      
 
 3c)
 |	left-hand side	 |	interferes with	 |
 =========================================
 |	  	  a			 |	    b,t,z	 	 |
 |	      b	 	 	 | 		a,t,z	 	 |
 |	      t	 	 	 |		 a,b	 	 |
 |	      z		 	 |		 a,b		 |
 
            t
          /   \
         /     \
        a ----- b
         \     /
          \   /
            z

3d)
          (rød)
            t
          /   \
         /     \
  (blå) a ----- b (grøn)
         \     /
          \   /
            z
          (rød)
		
3e)

Først fjerner man t, og ser om nogle er < 2, hvilket ingen er. Derfor fjerner
man a derefter, og nu har både b og z kun 1 nabo. Derfor får disse hver sin farve.
             
          /   \
         /     \
          ----- b (grøn)
         \     /
          \   /
            z
          (rød)
          
a har tre nabo'er, og vi markerer derfor denne som "spill". t har kun 1 nabo, som 
er b, derfor giver vi den samme farve som z:

          (rød)
            t
          /   \
         /     \
(spill) a ----- b (grøn)
         \     /
          \   /
            z
          (rød)